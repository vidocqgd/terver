# Задача 3 (Дополнительно) Произвести вычисления как в пункте 2, но с вычислением intercept. Учесть, что
# изменение коэффициентов должно производиться
# на каждом шаге одновременно (то есть изменение одного коэффициента не должно
# влиять на изменение другого во время одной итерации).

import numpy as np

# Заданные значения заработной платы и скорингового балла
zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

# Градиентный спуск для вычисления коэффициента линейной регрессии с intercept
learning_rate = 0.0001  # Скорость обучения
num_iterations = 1000  # Количество итераций

theta = np.zeros(2)  # Инициализация начальных значений коэффициентов

for _ in range(num_iterations):
    prediction = theta[0] + zp * theta[1]
    theta[0] -= learning_rate * np.mean(prediction - ks)
    theta[1] -= learning_rate * np.mean((prediction - ks) * zp)

print("Коэффициенты линейной регрессии с intercept:", theta)